import { Mensagem } from '../types/conversa';
import { obterInformacoesBancos } from '../utils/scriptSDR';

interface ClienteInfo {
  nome?: string;
  numero?: string;
  status?: string;
}

/**
 * FunÃ§Ã£o do "cÃ©rebro" para prÃ©-processar o histÃ³rico completo de mensagens e gerar um prompt claro e focado para a IA.
 * - Processa toda a conversa (nÃ£o apenas Ãºltimas 10)
 * - Inclui informaÃ§Ãµes do cliente quando disponÃ­vel
 * - Formata o prompt com instruÃ§Ãµes para a IA nÃ£o fugir do escopo
 * - MantÃ©m contexto completo da conversa
 * - Verifica bancos aceitos e nÃ£o aceitos
 */
export function gerarPromptCerebro(
  historico: Mensagem[], 
  clienteInfo?: ClienteInfo,
  mensagemAtual?: string
): string {
  // Filtra mensagens muito curtas ou vazias
  const historicoFiltrado = historico.filter(msg => msg.texto && msg.texto.length > 2);
  
  // Formata o histÃ³rico completo para o prompt
  const historicoFormatado = historicoFiltrado.map((msg) =>
    `${msg.autor === 'usuario' ? 'Cliente' : 'Sistema'}: ${msg.texto}`
  ).join('\n');

  // InformaÃ§Ãµes do cliente
  const infoCliente = clienteInfo ? `
INFORMAÃ‡Ã•ES DO CLIENTE:
- Nome: ${clienteInfo.nome || 'NÃ£o informado'}
- NÃºmero: ${clienteInfo.numero || 'NÃ£o informado'}
- Status: ${clienteInfo.status || 'NÃ£o informado'}
` : '';

  // Mensagem atual do cliente
  const mensagemCliente = mensagemAtual ? `\nMENSAGEM ATUAL DO CLIENTE: ${mensagemAtual}` : '';

  // Obter informaÃ§Ãµes dos bancos
  const infoBancos = obterInformacoesBancos();

  // Prompt com instruÃ§Ã£o clara para a IA
  const prompt = `
  ${infoCliente}


  HISTÃ“RICO COMPLETO DA CONVERSA:
  ${historicoFormatado}${mensagemCliente}
  Baseado na Ãºltima mensagem do Cliente, qual a prÃ³xima mensagem que vocÃª tem que mandar seguindo o arquivo Script SDR PDE 

  Responda somente com a mensagem que deve ser enviada.`;
  

  console.log('ðŸ§  Prompt gerado (primeiros 500 chars):', prompt.substring(0, 500) + '...');
  return prompt;
}